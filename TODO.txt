Good things to put on resume
//Determine next search term (word2Vec) after all promises resolve
//Make call to database to update word list and tick up counter for songs 

OVERALL SUMMARY 
-Guest search DONE

-Display 
    -Creating data structures DONE
    -Forces (add connection lines, smooth center camera) DONE
        Damping/Cooling Factor / Threshold for Stopping DONE
        Force Strengths / Additional Forces or Constraints DONE
        Starting point DONE
        Integration method DONE?
    -Interactions (size increase, spawn in transition) DONE
    -(backend returns track) + clicking DONE 
    -hover info + Lettering DONE

-Add a velocity limit? Check that this is not buggy? DONE
    -Integration method
    -Fixed animationframe bug

-Volume button
-Scroll to change scale of canvas? Drag to move camera?
-Improve generation to not cause two things to shoot away (or set a cap on velocity / collision detection)
-Make Vinyls fade if close to 0, 0
-Bug - panyolo color not going through <----- 3
    -Unrelated bug: seems to try to play it twice at the start of a queued song
    -Sometimes you click and it doubles back? DON'T QUEUE REQUESTS IF ONE ALREADY EXISTS
    -Other requests should probably also lock interactions
-Error handling + logged out message <----- 4

-Embeddings + vector database (AWS hosting) <----- 5
    -Store in vector db 
-K clustering + display text (k means++, k means, silhouette) <---- 6
    -Make numbers mean something?
    -Hometown / constellation 
EXTRA: sync up with others? maybe the discs should always spawn in the same place
-Highlight 5 correlations
-Reset decay so that you can drag discs?

Contribute
-Show search bar when button is clicked DONE
-Search bar shows playlists DONE
-Show playlist songs when contributing DONE
-When one is submitted, lock frontend  DONE
-Tell backend to write into db DONE (COULD BE OPTIMIZED)
-Logout should stop music DONE

Search 
-Search bar shows songs DONE
-Search without sign in + backend error handling <---
    -Auto sign in if cookie works, store whether in guest mode somewhere <or maybe just check with backend>? DONE
    -Log out? DONE
-On click (or enter for keyword), send text or track id to backend <---
-Backend returns neighbours DONE

Player
-Do it on successful search? DONE
-Randomized coordinates for now? DONE
-Long titles move side to side DONE
-Read for error handling: https://developer.spotify.com/documentation/web-playback-sdk
-Interactions when something else is playing? DONE


Display <---
-Favicon
-Given a list of tracks, their relations, attempt to render 
-On click, add those neighbours too
-Hover to show information
-Big label to say the region
-When a vinyl is clicked start playing music and update text / location  

Extra
-Explainer (?) button 
    -Genre Space Coordinate 
    -Contributions
    -Vector database
-Pausing/playing music?
-Really good documentation (backend endpoints and code flow, database interactions)
-Mobile styling 
-Logged out message / error handling?
-Change volume

Embeddings
-SPOTIFY HOMETOWN
    -Get top songs, take best summaries (see below) and apply k-cluster for biggest set
-Script to go through all unique playlists and get embedding, store in vector database (only has to run if it's not in the DB)
-Script to take a song, get all the playlists it's in and get the best descriptor of it using k cluster, then store it
    -Either of these last two may be done in the contribute and neighbours endpoints instead
-Advanced feature: regional summary of many songs together (zoom out)
-Word neighbours mode vs. corrlelation neighbours

greek
spotify
serif
website
stars
maps

jams should work in theory 
must use computer
must have email ready